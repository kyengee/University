게임프로그래밍은 일반적인 프로그래밍(문제가 주어지는)과 달리
문제를 만들어내고 문제를 규정하는데 이 과정을 게임기획이라고 한다.

내부의 데이터의 표현이 3D인지 2D인지에 따라 
3D게임인지 2D게임인지가 나뉜다.

데이터도3D 구현(화면출력)도 3D처리를 하면 3D게임이라고 할 수 있다.

-수업내용-
T&L
Transform 선형대수학 이동변환(atem?어템포), 신축-회전(선형변환)
Lighting 변환된것을 화면에 표현하는것.

변환을 위한 수학= 벡터,행렬

GameFramework 게임의 골격을 만들어본다.

Shader Programming GPU를 사용하기 위해
--------------------------
게임에는 여러가지 처리과정이 있다.
과정중 화면에 그리기위한 과정을 렌더링이라하고
3차원 -> 2차원
처리를 해주는 엔진을 렌더링 엔진, 그래픽스 엔진이라 한다.
(컴퓨터를 이용하기때문에 수학적인 방법을 이용해야한다.)

기하학적 모델링
메쉬-다각형의집합-삼각형의집합-선분들의집합-점(벡터)들의집합
-실수들의 집합
렌더링은 선분을 그리는것이 아니라 면을 그리는 것(색)
입체의 기본단위는 육면체
입체중 그릴범위를 판단하는것도 벡터와 행렬을 사용하여한다

원은 3개의 실수로 그릴 수 있지만 3D모델은 그렇지 않기때문에
점들의 집합으로 나타내었고 이것을 표현하는걸 기하학적 모델링이라고
한다.

2차원에서의 기하학
좌표계
화면좌표계는 직교좌표계와는 달리 정수만 사용한다(픽셀의 위치를 나타내기 때문)
화면좌표계는 2D이지만 게임상에서는 직교 3차원 좌표계
다이렉트X는 왼손좌표계 Opengl은 오른손좌표계

왼손좌표계 x,y,z가 시계방향, 오른손좌표계 x,y,z가 반시계방향
왼손은 멀리 떨어져있는(z)가 수가 크다.

3차원의 좌표를 표현하려면 최소 3개의 벡터가 필요하다.
세개의 기저벡터(스칼라곱과 덧셈) (1,0,0), (0,1,0), (0,0,1)의 선형결합으로
스칼라곱과 덧셈으로 정의할수 있는 어떤것 = 벡터

메쉬 - 다각형들의집합 - 점들의 집합 - 순서쌍들의 집합
struct{ x, y, z} -> 순서쌍

오브젝트의 위치와 방향이 바뀌는것 - 애니메이션
큐브의 회전, 위치이동(Transform)

위치와 방향을 바꾸기위한 프로그램을 만드는것

모델을 표현
모델을 표현하기위한 좌표계 - 모델좌표계
게임세상을 표현하기위한 좌표계 - 월드좌표계 - 딱 하나 존재

메쉬와 모델의 원점은 같을 필요는 없지만 같으면 좋다.

모델, 위치, 방향 - 메쉬를 표현하기 위한 3가지


