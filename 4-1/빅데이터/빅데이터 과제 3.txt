4.1 NumPy ndarray: 다차원 배열 객체

>>> import numpy as np
>>> data = [0.956,-0.24,2],[0.2232, 1.232, 4]
>>> data = np.array(data)
>>> print(data)
[[ 0.956  -0.24    2.    ]
 [ 0.2232  1.232   4.    ]]
>>> print(data.dtype, data.ndim, data.shape)
float64 2 (2, 3)

4.1.1 ndarray 생성

>>> np.zeros(10)
array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
>>> np.zeros((3,6))
array([[0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0.]])
>>> np.empty((2,3,2))
array([[[8.82769181e+025, 7.36662981e+228],
        [7.54894003e+252, 2.95479883e+137],
        [1.42800637e+248, 2.64686750e+180]],

       [[1.09936856e+248, 6.99481925e+228],
        [7.54894003e+252, 7.67109635e+170],
        [2.64686750e+180, 5.63234836e-322]]])
>>> np.arange(15)
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14])

>>> arr = np.array([1,2,3,4,5])
>>> print(arr.dtype)
int32
>>> arr.astype(np.float64)
array([1., 2., 3., 4., 5.])

