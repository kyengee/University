#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <fcntl.h>
#include <arpa/inet.h>
#include <sys/socket.h>
#define BUFF_SIZE 100

void error_handling(char *message) {
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}

int main(int argc, char *argv[]) {

	int serv_sock, clnt_sock, File_sock;
	char message[BUFF_SIZE];
	char send_message[BUFF_SIZE];
	int str_len;
	struct sockaddr_in serv_adr, clnt_adr;
	socklen_t clnt_adr_sz;

	if (argc != 2) {
		printf("Usage :%s <PORT>\n", argv[0]);
		exit(1);
	}

	serv_sock = socket(PF_INET, SOCK_STREAM, 0);
	if (serv_sock == -1)
		error_handling("socket() error");

puts("1");

	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family = AF_INET;
	serv_adr.sin_addr.s_addr = htonl(INADDR_ANY);
	serv_adr.sin_port = htons(atoi(argv[1]));

puts("2");

	if (bind(serv_sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr)) == -1)
		error_handling("bind() error");

puts("3");

	if (listen(serv_sock, 1) == -1)
		error_handling("Listen() error");

	clnt_adr_sz = sizeof(clnt_adr);

puts("4");

	clnt_sock = accept(serv_sock, (struct sockaddr*)&clnt_adr, &clnt_adr_sz);
	if (clnt_sock == -1)
		error_handling("accept() error");
	else
		printf("Find File Name:");
	if ((str_len = read(clnt_sock, message, BUFF_SIZE)) != 0)
		if (0 > (File_sock = open(message, O_WRONLY))) {
			printf("not exsist file");
			close(clnt_sock);
			close(serv_sock);
			return 0;
		}
	if((str_len = read(File_sock, send_message, BUFF_SIZE)) != 0)
		error_handling("file read error");
	else
		write(clnt_sock, send_message, str_len);

	close(clnt_sock);
	close(serv_sock);
	return 0;


}
