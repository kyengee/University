From ce14b019 Mon Apr  2 14:19:04 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w325J4Z3002560;
	Mon, 2 Apr 2018 14:19:04 +0900 (KST)
Date: Mon, 2 Apr 2018 14:19:04 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201804020519.w325J4Z3002560@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <fcntl.h>
#include <arpa/inet.h>
#include <sys/socket.h>
#define BUFF_SIZE 1024

void easy_write(int clnt_sock, char* recv_message){
	write(clnt_sock, recv_message, strlen(recv_message));
}

 
void error_handling(char *message) {

	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}

 

int main(int argc, char *argv[]) {

 
	int serv_sock, clnt_sock, File_sock;
	char message[BUFF_SIZE];
	int str_len;
	struct sockaddr_in serv_adr, clnt_adr;
	socklen_t clnt_adr_sz;

	if (argc != 2) {

		printf("Usage :%s <PORT>\n", argv[0]);
		exit(1);
	}

	serv_sock = socket(PF_INET, SOCK_STREAM, 0);

	if (serv_sock == -1)
		error_handling("socket() error");

 
	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family = AF_INET;
	serv_adr.sin_addr.s_addr = htonl(INADDR_ANY);
	serv_adr.sin_port = htons(atoi(argv[1]));
 

	if (bind(serv_sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr)) == -1)
		error_handling("bind() error");

 
	if (listen(serv_sock, 5) == -1)
		error_handling("bind() error");

 
	clnt_adr_sz = sizeof(clnt_adr);

puts("waiting Client..........\n");

	clnt_sock = accept(serv_sock, (struct sockaddr*)&clnt_adr, &clnt_adr_sz);
puts("Client connected successfuly\n");
	if (clnt_sock == -1)
		error_handling("accept() error");
	else
		easy_write(clnt_sock, "0\n find file name :\n");

	if ((str_len = read(clnt_sock, message, BUFF_SIZE)) != 0){
		if (0 > (File_sock = open(message, O_WRONLY))) {
			easy_write(clnt_sock, "0\n not exit File\n");
			puts("The file the client wants dose not exist\n");
			close(clnt_sock);
			close(serv_sock);
			return 0;
		}
	}
	
	do{
	if((str_len = read(File_sock, message, 10)) == -1)
		error_handling("file read error");
	else
		write(clnt_sock, message, str_len);
	}while(str_len > 0);

	close(clnt_sock);
	close(serv_sock);

	return 0;

}


From ce14b019 Tue Apr  3 02:29:05 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w32HT5D2014806;
	Tue, 3 Apr 2018 02:29:05 +0900 (KST)
Date: Tue, 3 Apr 2018 02:29:05 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201804021729.w32HT5D2014806@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <fcntl.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define BUFF_SIZE 1024
void error_handling(char *message);

int main(int argc, char *argv[])
{
	int sock, fd;
	char message[BUFF_SIZE];
	int str_len;
	struct sockaddr_in serv_adr;

	if(argc!=3) {
		printf("Usage : %s <IP> <port>\n", argv[0]);
		exit(1);
	}
	
	sock=socket(PF_INET, SOCK_STREAM, 0);   
	if(sock==-1)
		error_handling("socket() error");
	
	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family=AF_INET;
	serv_adr.sin_addr.s_addr=inet_addr(argv[1]);
	serv_adr.sin_port=htons(atoi(argv[2]));
	
	if(connect(sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr))==-1)
		error_handling("connect() error!");
	else
		puts("Connected...........");
	
	while(1) 
	{
		str_len = read(sock,message,1);
		switch(atoi(message)){
			case 0:
				str_len = read(sock,message,BUFF_SIZE-1);
				message[str_len] = 0;
				printf("%s",message);
				fgets(message, BUFF_SIZE, stdin);	
				write(sock,message,strlen(message));
			case 1:
				puts("make file name");	
				scanf("%s",message);
				if((fd = open(message,O_RDWR|O_CREAT,0644)) == -1)error_handling("File create error);
				while(1){
					str_len = read(sock,message,10);	
					if(str_len<0)break;
					printf("%s",message);
					write(fd,message,str_len);
					}
		}
				
				
				





	}
	clise(fd);
	close(sock);
	return 0;
}

void error_handling(char *message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}


From ce14b019 Tue Apr  3 04:14:39 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w32JEd3H015724;
	Tue, 3 Apr 2018 04:14:39 +0900 (KST)
Date: Tue, 3 Apr 2018 04:14:39 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201804021914.w32JEd3H015724@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <fcntl.h>
#include <arpa/inet.h>
#include <sys/socket.h>
#define BUFF_SIZE 1024

void easy_write(int clnt_sock, char* recv_message){
	write(clnt_sock, recv_message, strlen(recv_message));
}

 
void error_handling(char *message) {

	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}

 

int main(int argc, char *argv[]) {

 
	int serv_sock, clnt_sock, File_sock;
	char message[BUFF_SIZE];
	char* filename;
	int str_len;
	struct sockaddr_in serv_adr, clnt_adr;
	socklen_t clnt_adr_sz;

	if (argc != 2) {

		printf("Usage :%s <PORT>\n", argv[0]);
		exit(1);
	}

	serv_sock = socket(PF_INET, SOCK_STREAM, 0);

	if (serv_sock == -1)
		error_handling("socket() error");

 
	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family = AF_INET;
	serv_adr.sin_addr.s_addr = htonl(INADDR_ANY);
	serv_adr.sin_port = htons(atoi(argv[1]));
 

	if (bind(serv_sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr)) == -1)
		error_handling("bind() error");

 
	if (listen(serv_sock, 5) == -1)
		error_handling("bind() error");

 
	clnt_adr_sz = sizeof(clnt_adr);

puts("waiting Client..........\n");

	clnt_sock = accept(serv_sock, (struct sockaddr*)&clnt_adr, &clnt_adr_sz);
puts("Client connected successfuly\n");
	if (clnt_sock == -1)
		error_handling("accept() error");
	else
		easy_write(clnt_sock, "0find file name :\n");

	if ((str_len = read(clnt_sock, filename, BUFF_SIZE)) != 0){
		if (0 > (File_sock = open(filename, O_WRONLY))) {
			printf("%s",filename);
			easy_write(clnt_sock, "0not exit File\n");
			puts("The file the client wants dose not exist\n");
			close(clnt_sock);
			close(serv_sock);
			return 0;
		}
	else{
	easy_write(clnt_sock,"1");
	
	
	do{
	if((str_len = read(File_sock, message, 10)) == -1)
		error_handling("file read error");
	else
		write(clnt_sock, message, str_len);
	}while(str_len > 0);

	close(clnt_sock);
	close(serv_sock);

	return 0;
}
}

}


From ce14b019 Tue Apr  3 04:14:54 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w32JEsDl015731;
	Tue, 3 Apr 2018 04:14:54 +0900 (KST)
Date: Tue, 3 Apr 2018 04:14:54 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201804021914.w32JEsDl015731@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <fcntl.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define BUFF_SIZE 1024
void error_handling(char *message);

int main(int argc, char *argv[])
{
	int sock, fd;
	char message[BUFF_SIZE];
	int str_len;
	struct sockaddr_in serv_adr;

	if(argc!=3) {
		printf("Usage : %s <IP> <port>\n", argv[0]);
		exit(1);
	}
	
	sock=socket(PF_INET, SOCK_STREAM, 0);   
	if(sock==-1)
		error_handling("socket() error");
	
	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family=AF_INET;
	serv_adr.sin_addr.s_addr=inet_addr(argv[1]);
	serv_adr.sin_port=htons(atoi(argv[2]));
	
	if(connect(sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr))==-1)
		error_handling("connect() error!");
	else
		puts("Connected...........");
	
	while(1) 
	{
		str_len = read(sock,message,1);
		switch(atoi(message)){
			case 0:
				str_len = read(sock,message,BUFF_SIZE-1);
				message[str_len] = 0;
				printf("%s",message);
				fgets(message, BUFF_SIZE, stdin);	
				write(sock,message,strlen(message));
			case 1:
				puts("make file name: /n");	
				scanf("%s",message);
				if((fd = open(message,O_RDWR|O_CREAT,0644)) == -1)error_handling("File create error");
				while(1){
					str_len = read(sock,message,10);	
					if(str_len<=0)break;
					printf("%s",message);
					write(fd,message,str_len);
					}
		}
				
				
				





	}
	clise(fd);
	close(sock);
	return 0;
}

void error_handling(char *message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}


From ce14b019 Tue Apr  3 04:17:37 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w32JHbgR015741;
	Tue, 3 Apr 2018 04:17:37 +0900 (KST)
Date: Tue, 3 Apr 2018 04:17:37 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201804021917.w32JHbgR015741@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <fcntl.h>
#include <arpa/inet.h>
#include <sys/socket.h>
#define BUFF_SIZE 1024

void easy_write(int clnt_sock, char* recv_message){
	write(clnt_sock, recv_message, strlen(recv_message));
}

 
void error_handling(char *message) {

	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}

 

int main(int argc, char *argv[]) {

 
	int serv_sock, clnt_sock, File_sock;
	char message[BUFF_SIZE];
	char* filename;
	int str_len;
	struct sockaddr_in serv_adr, clnt_adr;
	socklen_t clnt_adr_sz;

	if (argc != 2) {

		printf("Usage :%s <PORT>\n", argv[0]);
		exit(1);
	}

	serv_sock = socket(PF_INET, SOCK_STREAM, 0);

	if (serv_sock == -1)
		error_handling("socket() error");

 
	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family = AF_INET;
	serv_adr.sin_addr.s_addr = htonl(INADDR_ANY);
	serv_adr.sin_port = htons(atoi(argv[1]));
 

	if (bind(serv_sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr)) == -1)
		error_handling("bind() error");

 
	if (listen(serv_sock, 5) == -1)
		error_handling("bind() error");

 
	clnt_adr_sz = sizeof(clnt_adr);

puts("waiting Client..........\n");

	clnt_sock = accept(serv_sock, (struct sockaddr*)&clnt_adr, &clnt_adr_sz);
puts("Client connected successfuly\n");
	if (clnt_sock == -1)
		error_handling("accept() error");
	else
		easy_write(clnt_sock, "0find file name :\n");

	if ((str_len = read(clnt_sock, filename, BUFF_SIZE)) != 0){
		if (0 > (File_sock = open(filename, O_WRONLY))) {
			printf("%s",filename);
			easy_write(clnt_sock, "0not exit File\n");
			puts("The file the client wants dose not exist\n");
			close(clnt_sock);
			close(serv_sock);
			return 0;
		}
	else{
	easy_write(clnt_sock,"1");
	
	
	do{
	if((str_len = read(File_sock, message, 10)) == -1)
		error_handling("file read error");
	else
		write(clnt_sock, message, str_len);
	}while(str_len > 0);

	close(clnt_sock);
	close(serv_sock);

	return 0;
}
}

}


From ce14b019 Tue Apr  3 04:18:24 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w32JIObO015751;
	Tue, 3 Apr 2018 04:18:24 +0900 (KST)
Date: Tue, 3 Apr 2018 04:18:24 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201804021918.w32JIObO015751@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <fcntl.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define BUFF_SIZE 1024
void error_handling(char *message);

int main(int argc, char *argv[])
{
	int sock, fd;
	char message[BUFF_SIZE];
	int str_len;
	struct sockaddr_in serv_adr;

	if(argc!=3) {
		printf("Usage : %s <IP> <port>\n", argv[0]);
		exit(1);
	}
	
	sock=socket(PF_INET, SOCK_STREAM, 0);   
	if(sock==-1)
		error_handling("socket() error");
	
	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family=AF_INET;
	serv_adr.sin_addr.s_addr=inet_addr(argv[1]);
	serv_adr.sin_port=htons(atoi(argv[2]));
	
	if(connect(sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr))==-1)
		error_handling("connect() error!");
	else
		puts("Connected...........");
	
	while(1) 
	{
		str_len = read(sock,message,1);
		switch(atoi(message)){
			case 0:
				str_len = read(sock,message,BUFF_SIZE-1);
				message[str_len] = 0;
				printf("%s",message);
				fgets(message, BUFF_SIZE, stdin);	
				write(sock,message,strlen(message));
			case 1:
				puts("make file name: /n");	
				scanf("%s",message);
				if((fd = open(message,O_RDWR|O_CREAT,0644)) == -1)error_handling("File create error");
				while(1){
					str_len = read(sock,message,10);	
					if(str_len<=0)break;
					printf("%s",message);
					write(fd,message,str_len);
					}
		}
				
				
				





	}
	clise(fd);
	close(sock);
	return 0;
}

void error_handling(char *message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}


From ce14b019 Thu Apr 12 04:33:41 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w3BJXfWo019478;
	Thu, 12 Apr 2018 04:33:41 +0900 (KST)
Date: Thu, 12 Apr 2018 04:33:41 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201804111933.w3BJXfWo019478@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define BUF_SIZE 1024
#define OPSZ 4
void error_handling(char *message);
int calculate(int opnum, int opnds[], char oprator);

int main(int argc, char *argv[])
{
	int fb;
	char name[BUF_SIZE];
	int serv_sock, clnt_sock;
	char opinfo[BUF_SIZE];
	int result,  i;
	char opnd_cnt;
	int recv_cnt, recv_len;	
	struct sockaddr_in serv_adr, clnt_adr;
	socklen_t clnt_adr_sz;
	if(argc!=2) {
		printf("Usage : %s <port>\n", argv[0]);
		exit(1);
	}
	
	serv_sock=socket(PF_INET, SOCK_STREAM, 0);   
	if(serv_sock==-1)
		error_handling("socket() error");
	
	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family=AF_INET;
	serv_adr.sin_addr.s_addr=htonl(INADDR_ANY);
	serv_adr.sin_port=htons(atoi(argv[1]));

	if(bind(serv_sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr))==-1)
		error_handling("bind() error");
	if(listen(serv_sock, 5)==-1)
		error_handling("listen() error");	
	clnt_adr_sz=sizeof(clnt_adr);
	clnt_sock = accept(serv_sock, (struct sockaddr*)&clnt_adr, &clnt_adr_sz);

puts("1");
		read(clnt_sock,name,BUF_SIZE);
puts("2");
printf("%s",name);
		if ((fb = open(name, O_RDONLY)) != -1) {
puts("3");
			printf("!!!!");
			read(fb, opinfo, BUF_SIZE);
			write(clnt_sock, opinfo, sizeof(opinfo));

		}
		
		close(clnt_sock);
	close(serv_sock);
	return 0;
}

int calculate(int opnum, int opnds[], char op)
{
	int result=opnds[0], i;
	
	switch(op)
	{
	case '+':
		for(i=1; i<opnum; i++) result+=opnds[i];
		break;
	case '-':
		for(i=1; i<opnum; i++) result-=opnds[i];
		break;
	case '*':
		for(i=1; i<opnum; i++) result*=opnds[i];
		break;
	}
	return result;
}

void error_handling(char *message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}


From ce14b019 Thu Apr 12 04:34:21 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w3BJYLu4019482
	for finished; Thu, 12 Apr 2018 04:34:21 +0900 (KST)
Date: Thu, 12 Apr 2018 04:34:21 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201804111934.w3BJYLu4019482@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define BUF_SIZE 1024
#define OPSZ 4
void error_handling(char *message);
int calculate(int opnum, int opnds[], char oprator);

int main(int argc, char *argv[])
{
	int fb;
	char name[BUF_SIZE];
	int serv_sock, clnt_sock;
	char opinfo[BUF_SIZE];
	int result,  i;
	char opnd_cnt;
	int recv_cnt, recv_len;	
	struct sockaddr_in serv_adr, clnt_adr;
	socklen_t clnt_adr_sz;
	if(argc!=2) {
		printf("Usage : %s <port>\n", argv[0]);
		exit(1);
	}
	
	serv_sock=socket(PF_INET, SOCK_STREAM, 0);   
	if(serv_sock==-1)
		error_handling("socket() error");
	
	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family=AF_INET;
	serv_adr.sin_addr.s_addr=htonl(INADDR_ANY);
	serv_adr.sin_port=htons(atoi(argv[1]));

	if(bind(serv_sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr))==-1)
		error_handling("bind() error");
	if(listen(serv_sock, 5)==-1)
		error_handling("listen() error");	
	clnt_adr_sz=sizeof(clnt_adr);
	clnt_sock = accept(serv_sock, (struct sockaddr*)&clnt_adr, &clnt_adr_sz);

puts("1");
		read(clnt_sock,name,BUF_SIZE);
puts("2");
printf("%s",name);
		if ((fb = open(name, O_RDONLY)) != -1) {
puts("3");
			printf("!!!!");
			read(fb, opinfo, BUF_SIZE);
			write(clnt_sock, opinfo, sizeof(opinfo));

		}
		
		close(clnt_sock);
	close(serv_sock);
	return 0;
}

int calculate(int opnum, int opnds[], char op)
{
	int result=opnds[0], i;
	
	switch(op)
	{
	case '+':
		for(i=1; i<opnum; i++) result+=opnds[i];
		break;
	case '-':
		for(i=1; i<opnum; i++) result-=opnds[i];
		break;
	case '*':
		for(i=1; i<opnum; i++) result*=opnds[i];
		break;
	}
	return result;
}

void error_handling(char *message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}


From ce14b019 Thu Apr 12 04:34:48 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w3BJYmEk019486;
	Thu, 12 Apr 2018 04:34:48 +0900 (KST)
Date: Thu, 12 Apr 2018 04:34:48 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201804111934.w3BJYmEk019486@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define BUF_SIZE 1024
#define OPSZ 4
void error_handling(char *message);
int calculate(int opnum, int opnds[], char oprator);

int main(int argc, char *argv[])
{
	int fb;
	char name[BUF_SIZE];
	int serv_sock, clnt_sock;
	char opinfo[BUF_SIZE];
	int result,  i;
	char opnd_cnt;
	int recv_cnt, recv_len;	
	struct sockaddr_in serv_adr, clnt_adr;
	socklen_t clnt_adr_sz;
	if(argc!=2) {
		printf("Usage : %s <port>\n", argv[0]);
		exit(1);
	}
	
	serv_sock=socket(PF_INET, SOCK_STREAM, 0);   
	if(serv_sock==-1)
		error_handling("socket() error");
	
	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family=AF_INET;
	serv_adr.sin_addr.s_addr=htonl(INADDR_ANY);
	serv_adr.sin_port=htons(atoi(argv[1]));

	if(bind(serv_sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr))==-1)
		error_handling("bind() error");
	if(listen(serv_sock, 5)==-1)
		error_handling("listen() error");	
	clnt_adr_sz=sizeof(clnt_adr);
	clnt_sock = accept(serv_sock, (struct sockaddr*)&clnt_adr, &clnt_adr_sz);

puts("1");
		read(clnt_sock,name,BUF_SIZE);
puts("2");
printf("%s",name);
		if ((fb = open(name, O_RDONLY)) != -1) {
puts("3");
			printf("!!!!");
			read(fb, opinfo, BUF_SIZE);
			write(clnt_sock, opinfo, sizeof(opinfo));

		}
		
		close(clnt_sock);
	close(serv_sock);
	return 0;
}

int calculate(int opnum, int opnds[], char op)
{
	int result=opnds[0], i;
	
	switch(op)
	{
	case '+':
		for(i=1; i<opnum; i++) result+=opnds[i];
		break;
	case '-':
		for(i=1; i<opnum; i++) result-=opnds[i];
		break;
	case '*':
		for(i=1; i<opnum; i++) result*=opnds[i];
		break;
	}
	return result;
}

void error_handling(char *message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}


From ce14b019 Thu Apr 12 04:35:39 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w3BJZdUo019494;
	Thu, 12 Apr 2018 04:35:39 +0900 (KST)
Date: Thu, 12 Apr 2018 04:35:39 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201804111935.w3BJZdUo019494@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define BUF_SIZE 30


void error_handling(char *message);

int main(int argc, char *argv[])
{
	int sock;
	char name[BUF_SIZE];
	char opmsg[BUF_SIZE];
	struct sockaddr_in serv_adr;
	if(argc!=3) {
		printf("Usage : %s <IP> <port>\n", argv[0]);
		exit(1);
	}
	
	sock=socket(PF_INET, SOCK_STREAM, 0);   
	if(sock==-1)
		error_handling("socket() error");
	
	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family=AF_INET;
	serv_adr.sin_addr.s_addr=inet_addr(argv[1]);
	serv_adr.sin_port=htons(atoi(argv[2]));
	
	if(connect(sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr))==-1)
		error_handling("connect() error!");
	else
		puts("Connected...........");

	fputs("file name : \n", stdout);
puts("1\n");
	scanf("%s",name);
puts("2\n");
	printf("%s",name);
	printf("%d strlen %d sizeof",strlen(name),sizeof(name));
puts("3\n");
	printf("%d",write(sock,name,strlen(name)));
puts("4\n");
	
	read(sock, &opmsg, BUF_SIZE);
	
	printf("Operation result: %s \n", opmsg);
	close(sock);
	return 0;
}

void error_handling(char *message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}


From ce14b019 Thu Apr 12 12:27:57 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w3C3RvTi001175
	for tlawltjq0110; Thu, 12 Apr 2018 12:27:57 +0900 (KST)
Date: Thu, 12 Apr 2018 12:27:57 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201804120327.w3C3RvTi001175@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define BUF_SIZE 30

void error_handling(char *message);

int main(int argc, char *argv[])
{
	int file,str_len;
	char name[BUF_SIZE];
	int serv_sock, clnt_sock;
	struct sockaddr_in serv_adr, clnt_adr;
	socklen_t clnt_adr_sz;
	if (argc != 2) {
		printf("Usage : %s <port>\n", argv[0]);
		exit(1);
	}

	serv_sock = socket(PF_INET, SOCK_STREAM, 0);
	if (serv_sock == -1)
		error_handling("socket() error");

	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family = AF_INET;
	serv_adr.sin_addr.s_addr = htonl(INADDR_ANY);
	serv_adr.sin_port = htons(atoi(argv[1]));

	if (bind(serv_sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr)) == -1)
		error_handling("bind() error");
	if (listen(serv_sock, 5) == -1)
		error_handling("listen() error");
	clnt_adr_sz = sizeof(clnt_adr);
	puts("1");
	clnt_sock = accept(serv_sock, (struct sockaddr*)&clnt_adr, &clnt_adr_sz);
	printf("client detected");
	read(clnt_sock, name, BUF_SIZE);
	printf("%s", name);
	if (name == "end") {
		close(clnt_sock);
		close(serv_sock);
		return 0;
	}
	else {
		read(clnt_sock, name, BUF_SIZE);
		write(clnt_sock, "ok", strlen("ok"));
		if ((file = open(name, O_RDONLY)) == -1)
			error_handling("makefile() error");
		else {
			while ((str_len = read(clnt_sock, name, BUF_SIZE)) != 0) {
				write(file, name, strlen(name));
			}
		}
	}

	close(clnt_sock);
	close(serv_sock);
	return 0;
}



void error_handling(char *message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}



From ce14b019 Thu Apr 12 12:28:06 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w3C3S6x1001204
	for tlawltjq0110; Thu, 12 Apr 2018 12:28:06 +0900 (KST)
Date: Thu, 12 Apr 2018 12:28:06 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201804120328.w3C3S6x1001204@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <stdio.h>
#include <fcntl.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define BUF_SIZE 30


void error_handling(char *message);

int main(int argc, char *argv[])
{
	int sock, file, str_len=0;
	char name[BUF_SIZE];
	struct sockaddr_in serv_adr;
	if (argc != 3) {
		printf("Usage : %s <IP> <port>\n", argv[0]);
		exit(1);
	}

	sock = socket(PF_INET, SOCK_STREAM, 0);
	if (sock == -1)
		error_handling("socket() error");

	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family = AF_INET;
	serv_adr.sin_addr.s_addr = inet_addr(argv[1]);
	serv_adr.sin_port = htons(atoi(argv[2]));

	if (connect(sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr)) == -1)
		error_handling("connect() error!");
	else
		puts("Connected...........");

	fputs("file name : \n", stdout);
	scanf("%s", name);
	printf("finding %s...\n", name);


	if ((file = open(name, O_RDONLY))==-1) {
		printf("File not exist");
		write(sock,"end", strlen("end"));
		close(sock);
		return 0;
	}
	else {
		fputs("make file name : \n", stdout);
		puts("0");
		scanf("%s", name);
		puts("1");
		printf("make %s...", name);
		puts("2");
		write(sock, name, strlen(name));
		puts("3");
		read(sock, name, BUF_SIZE);
		while ((str_len = read(file, name, BUF_SIZE))!=0) {
			write(sock,name, strlen(name));
		}
		close(sock);

	}


	return 0;
}

void error_handling(char *message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}



From ce14b019 Thu Apr 12 12:28:27 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w3C3SRnH001236;
	Thu, 12 Apr 2018 12:28:27 +0900 (KST)
Date: Thu, 12 Apr 2018 12:28:27 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201804120328.w3C3SRnH001236@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <stdio.h>
#include <fcntl.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define BUF_SIZE 30


void error_handling(char *message);

int main(int argc, char *argv[])
{
	int sock, file, str_len=0;
	char name[BUF_SIZE];
	struct sockaddr_in serv_adr;
	if (argc != 3) {
		printf("Usage : %s <IP> <port>\n", argv[0]);
		exit(1);
	}

	sock = socket(PF_INET, SOCK_STREAM, 0);
	if (sock == -1)
		error_handling("socket() error");

	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family = AF_INET;
	serv_adr.sin_addr.s_addr = inet_addr(argv[1]);
	serv_adr.sin_port = htons(atoi(argv[2]));

	if (connect(sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr)) == -1)
		error_handling("connect() error!");
	else
		puts("Connected...........");

	fputs("file name : \n", stdout);
	scanf("%s", name);
	printf("finding %s...\n", name);


	if ((file = open(name, O_RDONLY))==-1) {
		printf("File not exist");
		write(sock,"end", strlen("end"));
		close(sock);
		return 0;
	}
	else {
		fputs("make file name : \n", stdout);
		puts("0");
		scanf("%s", name);
		puts("1");
		printf("make %s...", name);
		puts("2");
		write(sock, name, strlen(name));
		puts("3");
		read(sock, name, BUF_SIZE);
		while ((str_len = read(file, name, BUF_SIZE))!=0) {
			write(sock,name, strlen(name));
		}
		close(sock);

	}


	return 0;
}

void error_handling(char *message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}



From ce14b019 Thu Apr 12 12:28:39 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w3C3SdNJ001251;
	Thu, 12 Apr 2018 12:28:39 +0900 (KST)
Date: Thu, 12 Apr 2018 12:28:39 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201804120328.w3C3SdNJ001251@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define BUF_SIZE 30

void error_handling(char *message);

int main(int argc, char *argv[])
{
	int file,str_len;
	char name[BUF_SIZE];
	int serv_sock, clnt_sock;
	struct sockaddr_in serv_adr, clnt_adr;
	socklen_t clnt_adr_sz;
	if (argc != 2) {
		printf("Usage : %s <port>\n", argv[0]);
		exit(1);
	}

	serv_sock = socket(PF_INET, SOCK_STREAM, 0);
	if (serv_sock == -1)
		error_handling("socket() error");

	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family = AF_INET;
	serv_adr.sin_addr.s_addr = htonl(INADDR_ANY);
	serv_adr.sin_port = htons(atoi(argv[1]));

	if (bind(serv_sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr)) == -1)
		error_handling("bind() error");
	if (listen(serv_sock, 5) == -1)
		error_handling("listen() error");
	clnt_adr_sz = sizeof(clnt_adr);
	puts("1");
	clnt_sock = accept(serv_sock, (struct sockaddr*)&clnt_adr, &clnt_adr_sz);
	printf("client detected");
	read(clnt_sock, name, BUF_SIZE);
	printf("%s", name);
	if (name == "end") {
		close(clnt_sock);
		close(serv_sock);
		return 0;
	}
	else {
		read(clnt_sock, name, BUF_SIZE);
		write(clnt_sock, "ok", strlen("ok"));
		if ((file = open(name, O_RDONLY)) == -1)
			error_handling("makefile() error");
		else {
			while ((str_len = read(clnt_sock, name, BUF_SIZE)) != 0) {
				write(file, name, strlen(name));
			}
		}
	}

	close(clnt_sock);
	close(serv_sock);
	return 0;
}



void error_handling(char *message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}



From ce14b019 Thu Apr 12 12:28:58 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w3C3SwBY001306;
	Thu, 12 Apr 2018 12:28:58 +0900 (KST)
Date: Thu, 12 Apr 2018 12:28:58 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201804120328.w3C3SwBY001306@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define BUF_SIZE 30

void error_handling(char *message);

int main(int argc, char *argv[])
{
	int file,str_len;
	char name[BUF_SIZE];
	int serv_sock, clnt_sock;
	struct sockaddr_in serv_adr, clnt_adr;
	socklen_t clnt_adr_sz;
	if (argc != 2) {
		printf("Usage : %s <port>\n", argv[0]);
		exit(1);
	}

	serv_sock = socket(PF_INET, SOCK_STREAM, 0);
	if (serv_sock == -1)
		error_handling("socket() error");

	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family = AF_INET;
	serv_adr.sin_addr.s_addr = htonl(INADDR_ANY);
	serv_adr.sin_port = htons(atoi(argv[1]));

	if (bind(serv_sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr)) == -1)
		error_handling("bind() error");
	if (listen(serv_sock, 5) == -1)
		error_handling("listen() error");
	clnt_adr_sz = sizeof(clnt_adr);
	puts("1");
	clnt_sock = accept(serv_sock, (struct sockaddr*)&clnt_adr, &clnt_adr_sz);
	printf("client detected");
	read(clnt_sock, name, BUF_SIZE);
	printf("%s", name);
	if (name == "end") {
		close(clnt_sock);
		close(serv_sock);
		return 0;
	}
	else {
		read(clnt_sock, name, BUF_SIZE);
		write(clnt_sock, "ok", strlen("ok"));
		if ((file = open(name, O_RDONLY)) == -1)
			error_handling("makefile() error");
		else {
			while ((str_len = read(clnt_sock, name, BUF_SIZE)) != 0) {
				write(file, name, strlen(name));
			}
		}
	}

	close(clnt_sock);
	close(serv_sock);
	return 0;
}



void error_handling(char *message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}



From ce14b019 Thu Apr 12 12:29:05 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w3C3T5S8001319;
	Thu, 12 Apr 2018 12:29:05 +0900 (KST)
Date: Thu, 12 Apr 2018 12:29:05 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201804120329.w3C3T5S8001319@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <stdio.h>
#include <fcntl.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define BUF_SIZE 30


void error_handling(char *message);

int main(int argc, char *argv[])
{
	int sock, file, str_len=0;
	char name[BUF_SIZE];
	struct sockaddr_in serv_adr;
	if (argc != 3) {
		printf("Usage : %s <IP> <port>\n", argv[0]);
		exit(1);
	}

	sock = socket(PF_INET, SOCK_STREAM, 0);
	if (sock == -1)
		error_handling("socket() error");

	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family = AF_INET;
	serv_adr.sin_addr.s_addr = inet_addr(argv[1]);
	serv_adr.sin_port = htons(atoi(argv[2]));

	if (connect(sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr)) == -1)
		error_handling("connect() error!");
	else
		puts("Connected...........");

	fputs("file name : \n", stdout);
	scanf("%s", name);
	printf("finding %s...\n", name);


	if ((file = open(name, O_RDONLY))==-1) {
		printf("File not exist");
		write(sock,"end", strlen("end"));
		close(sock);
		return 0;
	}
	else {
		fputs("make file name : \n", stdout);
		puts("0");
		scanf("%s", name);
		puts("1");
		printf("make %s...", name);
		puts("2");
		write(sock, name, strlen(name));
		puts("3");
		read(sock, name, BUF_SIZE);
		while ((str_len = read(file, name, BUF_SIZE))!=0) {
			write(sock,name, strlen(name));
		}
		close(sock);

	}


	return 0;
}

void error_handling(char *message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}



From ce14b019 Thu Apr 12 14:25:24 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w3C5POVe013937;
	Thu, 12 Apr 2018 14:25:24 +0900 (KST)
Date: Thu, 12 Apr 2018 14:25:24 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201804120525.w3C5POVe013937@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <stdio.h>
#include <fcntl.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define BUF_SIZE 30


void error_handling(char *message);

int main(int argc, char *argv[])
{
	int sock, file, str_len=0;
	char name[BUF_SIZE];
	struct sockaddr_in serv_adr;
	if (argc != 3) {
		printf("Usage : %s <IP> <port>\n", argv[0]);
		exit(1);
	}

	sock = socket(PF_INET, SOCK_STREAM, 0);
	if (sock == -1)
		error_handling("socket() error");

	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family = AF_INET;
	serv_adr.sin_addr.s_addr = inet_addr(argv[1]);
	serv_adr.sin_port = htons(atoi(argv[2]));

	if (connect(sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr)) == -1)
		error_handling("connect() error!");
	else
		puts("Connected...........");

	fputs("file name : \n", stdout);
	scanf("%s", name);
	printf("finding %s...\n", name);


	if ((file = open(name, O_RDONLY))==-1) {
		printf("File not exist");
		write(sock,"end", strlen("end"));
		close(sock);
		return 0;
	}
	else {
		fputs("make file name : \n", stdout);
		scanf("%s", name);
		printf("make %s...", name);
		write(sock, name, strlen(name));
		read(sock, name, BUF_SIZE);
		while ((str_len = read(file, name, strlen(name)))!=0) {		
			printf("%s",name);
			write(sock,name, str_len);
		}
		close(sock);

	}


	return 0;
}

void error_handling(char *message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}



From ce14b019 Thu Apr 12 14:25 KST 2018
From ce14b019 Thu Apr 19 12:53:04 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w3J3r4kM013487;
	Thu, 19 Apr 2018 12:53:04 +0900 (KST)
Date: Thu, 19 Apr 2018 12:53:04 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201804190353.w3J3r4kM013487@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <sys/socket.h>
#include <netinet/tcp.h>

#define TRUE 1
#define FALSE 0
void error_handling(char *message);

int main(int argc, char *argv[])
{
	int serv_sock, clnt_sock;
	char message[30];
	int option, str_len;
	socklen_t optlen, clnt_adr_sz;
	struct sockaddr_in serv_adr, clnt_adr;
	
	if(argc!=2) {
		printf("Usage : %s <port>\n", argv[0]);
		exit(1);
	}
	
	serv_sock=socket(PF_INET, SOCK_STREAM, 0);
	if(serv_sock==-1)
		error_handling("socket() error");
	
	optlen=sizeof(option);
	option=TRUE;	
	setsockopt(serv_sock, SOL_SOCKET, TCP_NODELAY, &option, optlen);
	printf("prev %d",option);
	
	option=FALSE;	
	setsockopt(serv_sock, SOL_SOCKET, TCP_NODELAY, &option, optlen);
	printf("after %d",option);
	close(serv_sock);
	return 0;
}

void error_handling(char *message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}


From ce14b019 Tue May  8 12:58 KST 2018
From ce14b019 Tue May  8 12:58:53 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w483wrsw029122;
	Tue, 8 May 2018 12:58:53 +0900 (KST)
Date: Tue, 8 May 2018 12:58:53 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201805080358.w483wrsw029122@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define BUF_SIZE 1024
void error_handling(char *message);

int main(int argc, char *argv[])
{
	int sock;
	char message[BUF_SIZE];
	int str_len;
	struct sockaddr_in serv_adr;

	if(argc!=3) {
		printf("Usage : %s <IP> <port>\n", argv[0]);
		exit(1);
	}
	
	sock=socket(PF_INET, SOCK_STREAM, 0);   
	if(sock==-1)
		error_handling("socket() error");
	
	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family=AF_INET;
	serv_adr.sin_addr.s_addr=inet_addr(argv[1]);
	serv_adr.sin_port=htons(atoi(argv[2]));
	
	if(connect(sock, (struct sockaddr*)&serv_adr, sizeof(serv_adr))==-1)
		error_handling("connect() error!");
	else
		puts("Connected...........");
	
	while(1) 
	{
		fputs("Input message(Q to quit): ", stdout);
		fgets(message, BUF_SIZE, stdin);
		
		write(sock, message, strlen(message));
		str_len=read(sock, message, BUF_SIZE-1);
		message[str_len]=0;
		printf("Message from server: %s", message);
		if (strcmp(message, "End of Message\n") == 0) {
			close(sock);
			fputs("nono",stdout);
			return 0;
		}
	}
	
	close(sock);
	return 0;
}

void error_handling(char *message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}


From ce14b019 Tue May  8 12:59:07 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w483x7mi029255;
	Tue, 8 May 2018 12:59:07 +0900 (KST)
Date: Tue, 8 May 2018 12:59:07 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201805080359.w483x7mi029255@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <fcntl.h>
#include <unistd.h>
#include <signal.h>
#include <sys/wait.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define BUF_SIZE 30
void error_handling(char *message);
void read_childproc(int sig);

int main(int argc, char *argv[])
{
	int serv_sock, clnt_sock;
	struct sockaddr_in serv_adr, clnt_adr;
	int file, i;
	char *buff;
	char name[BUF_SIZE];
	char file_name[BUF_SIZE];
	pid_t pid;
	struct sigaction act;
	socklen_t adr_sz;
	int str_len, state;
	char buf[BUF_SIZE];
	if(argc!=2) {
		printf("Usage : %s <port>\n", argv[0]);
		exit(1);
	}

	act.sa_handler=read_childproc;
	sigemptyset(&act.sa_mask);
	act.sa_flags=0;
	state=sigaction(SIGCHLD, &act, 0);
	serv_sock=socket(PF_INET, SOCK_STREAM, 0);
	memset(&serv_adr, 0, sizeof(serv_adr));
	serv_adr.sin_family=AF_INET;
	serv_adr.sin_addr.s_addr=htonl(INADDR_ANY);
	serv_adr.sin_port=htons(atoi(argv[1]));
	
	if(bind(serv_sock, (struct sockaddr*) &serv_adr, sizeof(serv_adr))==-1)
		error_handling("bind() error");
	if(listen(serv_sock, 5)==-1)
		error_handling("listen() error");
	
	while(1)
	{
		adr_sz=sizeof(clnt_adr);
		clnt_sock=accept(serv_sock, (struct sockaddr*)&clnt_adr, &adr_sz);
		if(clnt_sock==-1)
			continue;
		else
			puts("new client connected...");
		pid=fork();
		if(pid==-1)
		{
			close(clnt_sock);
			continue;
		}
		if(pid==0)
		{
			close(serv_sock);
			str_len=read(clnt_sock, name, BUF_SIZE);
			puts("Input File name");
			scanf("%s", file_name);
			if ((file = open(file_name, O_WRONLY | O_CREAT, 0644)) == -1)
				error_handling("makefile() error");
			else 
					for (i = 0; (i+str_len)<(BUF_SIZE-1); i++)
						name[i+str_len] = 0;
					write(file, name, strlen(name));
				
			write(clnt_sock, name, str_len);
			while ((str_len = read(clnt_sock, buf, BUF_SIZE)) != 0) {
				for (i = 0; (i+str_len)<(BUF_SIZE-1); i++)
					buf[i + str_len] = 0;
				write(file, buf, strlen(buf));
				if (!strcmp(buf, "q\n") || !strcmp(buf, "Q\n"))
				{
					buff = "End of Message\n";
					write(clnt_sock,buff,BUF_SIZE);
				}
				else {
					write(clnt_sock, buf, str_len);
				}
			}
			
			close(clnt_sock);
			puts("client disconnected...");
			return 0;
		}
		else
			close(clnt_sock);
	}
	close(serv_sock);
	return 0;
}

void read_childproc(int sig)
{
	pid_t pid;
	int status;
	pid=waitpid(-1, &status, WNOHANG);
	printf("removed proc id: %d \n", pid);
}
void error_handling(char *message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}


From ce14b019 Tue May 29 13:03:27 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w4T43RKB024319;
	Tue, 29 May 2018 13:03:27 +0900 (KST)
Date: Tue, 29 May 2018 13:03:27 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201805290403.w4T43RKB024319@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <stdio.h>
#include <sys/uio.h>
#define BUF_SIZE 100

int main(int argc, char *argv[])
{
	struct iovec vec[3];
	char buf1[BUF_SIZE]={0,};
	char buf2[BUF_SIZE]={0,};
	char buf3[BUF_SIZE]={0,};
	int str_len;

	vec[0].iov_base=buf1;
	vec[0].iov_len=5;
	vec[1].iov_base=buf2;
	vec[1].iov_len=5;
	vec[2].iov_base=buf3;
	vec[2].iov_len=BUF_SIZE;

	str_len=readv(0, vec, 3);
	printf("Read bytes: %d \n", str_len);
	printf("First message: %s \n", buf1);
	printf("Second message: %s \n", buf2);
	printf("final mesage: %s \n", buf3);
	return 0;
}





From ce14b019 Tue May 29 13:03:36 2018
Return-Path: <ce14b019>
Received: (from ce14b019@localhost)
	by computer.kpu.ac.kr (8.15.1+Sun/8.15.1/Submit) id w4T43abK024352;
	Tue, 29 May 2018 13:03:36 +0900 (KST)
Date: Tue, 29 May 2018 13:03:36 +0900 (KST)
From: 2014152019 <ce14b019>
Message-Id: <201805290403.w4T43abK024352@computer.kpu.ac.kr>
MIME-Version: 1.0
Content-Type: text/plain

#include <stdio.h>
#include <sys/uio.h>

int main(int argc, char *argv[])
{
	struct iovec vec[3];
	char buf1[]="ABCDEFG";
	char buf2[]="1234567";
	char buf3[]="abcdefg";
	int str_len;

	vec[0].iov_base=buf1;
	vec[0].iov_len=3;
	vec[1].iov_base=buf2;
	vec[1].iov_len=4;
	vec[2].iov_base=buf3;
	vec[2].iov_len=4;
	
	str_len=writev(1, vec, 3);
	puts("");
	printf("Write bytes: %d \n", str_len);
	return 0;
}


